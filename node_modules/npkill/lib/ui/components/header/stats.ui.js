import { UI_POSITIONS, INFO_MSGS } from '../../../constants/index.js';
import { BaseUi } from '../../base.ui.js';
import colors from 'colors';
export class StatsUi extends BaseUi {
    config;
    resultsService;
    logger;
    constructor(config, resultsService, logger) {
        super();
        this.config = config;
        this.resultsService = resultsService;
        this.logger = logger;
    }
    render() {
        const { totalSpace, spaceReleased } = this.resultsService.getStats();
        const totalSpacePosition = { ...UI_POSITIONS.TOTAL_SPACE };
        const spaceReleasedPosition = { ...UI_POSITIONS.SPACE_RELEASED };
        totalSpacePosition.x += INFO_MSGS.TOTAL_SPACE.length;
        spaceReleasedPosition.x += INFO_MSGS.SPACE_RELEASED.length;
        this.printAt(totalSpace, totalSpacePosition);
        this.printAt(spaceReleased, spaceReleasedPosition);
        if (this.config.showErrors) {
            this.showErrorsCount();
        }
    }
    showErrorsCount() {
        const errors = this.logger.get('error').length;
        if (errors === 0) {
            return;
        }
        const text = `${errors} error${errors > 1 ? 's' : ''}. 'e' to see`;
        this.printAt(colors['yellow'](text), { ...UI_POSITIONS.ERRORS_COUNT });
    }
}
